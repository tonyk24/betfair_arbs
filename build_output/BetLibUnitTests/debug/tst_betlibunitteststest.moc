/****************************************************************************
** Meta object code from reading C++ file 'tst_betlibunitteststest.cpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.5.0)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'tst_betlibunitteststest.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.5.0. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
struct qt_meta_stringdata_BetLibUnitTestsTest_t {
    QByteArrayData data[30];
    char stringdata0[1066];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_BetLibUnitTestsTest_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_BetLibUnitTestsTest_t qt_meta_stringdata_BetLibUnitTestsTest = {
    {
QT_MOC_LITERAL(0, 0, 19), // "BetLibUnitTestsTest"
QT_MOC_LITERAL(1, 20, 12), // "initTestCase"
QT_MOC_LITERAL(2, 33, 0), // ""
QT_MOC_LITERAL(3, 34, 15), // "cleanupTestCase"
QT_MOC_LITERAL(4, 50, 20), // "tc_totalGoalsCounter"
QT_MOC_LITERAL(5, 71, 29), // "tc_findBackLayPositiveOutcome"
QT_MOC_LITERAL(6, 101, 24), // "noFound_NoTake_back_back"
QT_MOC_LITERAL(7, 126, 39), // "found_OverMaxPlacement_NoTake..."
QT_MOC_LITERAL(8, 166, 38), // "found_UnderMaxPlacement_Take_..."
QT_MOC_LITERAL(9, 205, 40), // "found_ImpliedMaxExposure1_Tak..."
QT_MOC_LITERAL(10, 246, 40), // "found_ImpliedMaxExposure2_Tak..."
QT_MOC_LITERAL(11, 287, 25), // "take_and_NoTake_back_back"
QT_MOC_LITERAL(12, 313, 23), // "take_and_take_back_back"
QT_MOC_LITERAL(13, 337, 26), // "noFound_NoTake_back_to_lay"
QT_MOC_LITERAL(14, 364, 39), // "found_underMaxExposure_Take_b..."
QT_MOC_LITERAL(15, 404, 42), // "found_ImpliedMaxExposure1_Tak..."
QT_MOC_LITERAL(16, 447, 42), // "found_ImpliedMaxExposure2_Tak..."
QT_MOC_LITERAL(17, 490, 39), // "found_TakeSize1ToSmall_Take_b..."
QT_MOC_LITERAL(18, 530, 39), // "found_TakeSize2ToSmall_Take_b..."
QT_MOC_LITERAL(19, 570, 49), // "found_TakeSize1AndSize2ToSmal..."
QT_MOC_LITERAL(20, 620, 25), // "noFound_NoTake_lay_to_lay"
QT_MOC_LITERAL(21, 646, 42), // "found_maxExposureToSmall_NoTa..."
QT_MOC_LITERAL(22, 689, 38), // "found_underMaxExposure_Take_l..."
QT_MOC_LITERAL(23, 728, 41), // "found_ImpliedMaxExposure1_Tak..."
QT_MOC_LITERAL(24, 770, 41), // "found_ImpliedMaxExposure2_Tak..."
QT_MOC_LITERAL(25, 812, 58), // "tc_BetStatistics_hasActiveCom..."
QT_MOC_LITERAL(26, 871, 60), // "tc_BetStatistics_hasActiveCom..."
QT_MOC_LITERAL(27, 932, 41), // "tc_EventDataConsumer_logginge..."
QT_MOC_LITERAL(28, 974, 44), // "tc_EventDataConsumer_logginge..."
QT_MOC_LITERAL(29, 1019, 46) // "tc_EventDataConsumer_nologgin..."

    },
    "BetLibUnitTestsTest\0initTestCase\0\0"
    "cleanupTestCase\0tc_totalGoalsCounter\0"
    "tc_findBackLayPositiveOutcome\0"
    "noFound_NoTake_back_back\0"
    "found_OverMaxPlacement_NoTake_back_back\0"
    "found_UnderMaxPlacement_Take_back_back\0"
    "found_ImpliedMaxExposure1_Take_back_back\0"
    "found_ImpliedMaxExposure2_Take_back_back\0"
    "take_and_NoTake_back_back\0"
    "take_and_take_back_back\0"
    "noFound_NoTake_back_to_lay\0"
    "found_underMaxExposure_Take_back_to_lay\0"
    "found_ImpliedMaxExposure1_Take_back_to_lay\0"
    "found_ImpliedMaxExposure2_Take_back_to_lay\0"
    "found_TakeSize1ToSmall_Take_back_to_lay\0"
    "found_TakeSize2ToSmall_Take_back_to_lay\0"
    "found_TakeSize1AndSize2ToSmall_NoTake_back_to_lay\0"
    "noFound_NoTake_lay_to_lay\0"
    "found_maxExposureToSmall_NoTake_lay_to_lay\0"
    "found_underMaxExposure_Take_lay_to_lay\0"
    "found_ImpliedMaxExposure1_Take_lay_to_lay\0"
    "found_ImpliedMaxExposure2_Take_lay_to_lay\0"
    "tc_BetStatistics_hasActiveCombinations_2CombBothSuccssfull\0"
    "tc_BetStatistics_hasActiveCombinations_2CombPartlySuccssfull\0"
    "tc_EventDataConsumer_loggingevent_finnish\0"
    "tc_EventDataConsumer_loggingevent_abortEvent\0"
    "tc_EventDataConsumer_nologgingevent_abortEvent"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_BetLibUnitTestsTest[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
      28,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,  154,    2, 0x08 /* Private */,
       3,    0,  155,    2, 0x08 /* Private */,
       4,    0,  156,    2, 0x08 /* Private */,
       5,    0,  157,    2, 0x08 /* Private */,
       6,    0,  158,    2, 0x08 /* Private */,
       7,    0,  159,    2, 0x08 /* Private */,
       8,    0,  160,    2, 0x08 /* Private */,
       9,    0,  161,    2, 0x08 /* Private */,
      10,    0,  162,    2, 0x08 /* Private */,
      11,    0,  163,    2, 0x08 /* Private */,
      12,    0,  164,    2, 0x08 /* Private */,
      13,    0,  165,    2, 0x08 /* Private */,
      14,    0,  166,    2, 0x08 /* Private */,
      15,    0,  167,    2, 0x08 /* Private */,
      16,    0,  168,    2, 0x08 /* Private */,
      17,    0,  169,    2, 0x08 /* Private */,
      18,    0,  170,    2, 0x08 /* Private */,
      19,    0,  171,    2, 0x08 /* Private */,
      20,    0,  172,    2, 0x08 /* Private */,
      21,    0,  173,    2, 0x08 /* Private */,
      22,    0,  174,    2, 0x08 /* Private */,
      23,    0,  175,    2, 0x08 /* Private */,
      24,    0,  176,    2, 0x08 /* Private */,
      25,    0,  177,    2, 0x08 /* Private */,
      26,    0,  178,    2, 0x08 /* Private */,
      27,    0,  179,    2, 0x08 /* Private */,
      28,    0,  180,    2, 0x08 /* Private */,
      29,    0,  181,    2, 0x08 /* Private */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

void BetLibUnitTestsTest::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        BetLibUnitTestsTest *_t = static_cast<BetLibUnitTestsTest *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->initTestCase(); break;
        case 1: _t->cleanupTestCase(); break;
        case 2: _t->tc_totalGoalsCounter(); break;
        case 3: _t->tc_findBackLayPositiveOutcome(); break;
        case 4: _t->noFound_NoTake_back_back(); break;
        case 5: _t->found_OverMaxPlacement_NoTake_back_back(); break;
        case 6: _t->found_UnderMaxPlacement_Take_back_back(); break;
        case 7: _t->found_ImpliedMaxExposure1_Take_back_back(); break;
        case 8: _t->found_ImpliedMaxExposure2_Take_back_back(); break;
        case 9: _t->take_and_NoTake_back_back(); break;
        case 10: _t->take_and_take_back_back(); break;
        case 11: _t->noFound_NoTake_back_to_lay(); break;
        case 12: _t->found_underMaxExposure_Take_back_to_lay(); break;
        case 13: _t->found_ImpliedMaxExposure1_Take_back_to_lay(); break;
        case 14: _t->found_ImpliedMaxExposure2_Take_back_to_lay(); break;
        case 15: _t->found_TakeSize1ToSmall_Take_back_to_lay(); break;
        case 16: _t->found_TakeSize2ToSmall_Take_back_to_lay(); break;
        case 17: _t->found_TakeSize1AndSize2ToSmall_NoTake_back_to_lay(); break;
        case 18: _t->noFound_NoTake_lay_to_lay(); break;
        case 19: _t->found_maxExposureToSmall_NoTake_lay_to_lay(); break;
        case 20: _t->found_underMaxExposure_Take_lay_to_lay(); break;
        case 21: _t->found_ImpliedMaxExposure1_Take_lay_to_lay(); break;
        case 22: _t->found_ImpliedMaxExposure2_Take_lay_to_lay(); break;
        case 23: _t->tc_BetStatistics_hasActiveCombinations_2CombBothSuccssfull(); break;
        case 24: _t->tc_BetStatistics_hasActiveCombinations_2CombPartlySuccssfull(); break;
        case 25: _t->tc_EventDataConsumer_loggingevent_finnish(); break;
        case 26: _t->tc_EventDataConsumer_loggingevent_abortEvent(); break;
        case 27: _t->tc_EventDataConsumer_nologgingevent_abortEvent(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject BetLibUnitTestsTest::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_BetLibUnitTestsTest.data,
      qt_meta_data_BetLibUnitTestsTest,  qt_static_metacall, Q_NULLPTR, Q_NULLPTR}
};


const QMetaObject *BetLibUnitTestsTest::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *BetLibUnitTestsTest::qt_metacast(const char *_clname)
{
    if (!_clname) return Q_NULLPTR;
    if (!strcmp(_clname, qt_meta_stringdata_BetLibUnitTestsTest.stringdata0))
        return static_cast<void*>(const_cast< BetLibUnitTestsTest*>(this));
    return QObject::qt_metacast(_clname);
}

int BetLibUnitTestsTest::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 28)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 28;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 28)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 28;
    }
    return _id;
}
QT_END_MOC_NAMESPACE
